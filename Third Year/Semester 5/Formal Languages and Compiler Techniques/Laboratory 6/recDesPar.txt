(q, 0, [], ['S'])
|--- expand
(q, 0, [('S', 0)], ['a', 'S', 'b', 'S'])
|--- advance
(q, 1, [('S', 0), 'a'], ['S', 'b', 'S'])
|--- expand
(q, 1, [('S', 0), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- advance
(q, 2, [('S', 0), 'a', ('S', 0), 'a'], ['S', 'b', 'S', 'b', 'S'])
|--- expand
(q, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S', 'b', 'S'])
|--- another try
(q, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 1)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 1)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- another try
(q, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 2)], ['c', 'b', 'S', 'b', 'S'])
|--- advance
(q, 3, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c'], ['b', 'S', 'b', 'S'])
|--- advance
(q, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b'], ['S', 'b', 'S'])
|--- expand
(q, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- another try
(q, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 1)], ['a', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 1)], ['a', 'S', 'b', 'S'])
|--- another try
(q, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 2)], ['c', 'b', 'S'])
|--- advance
(q, 5, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 2), 'c'], ['b', 'S'])
|--- momentary insuccess
(b, 5, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 2), 'c'], ['b', 'S'])
|--- back
(b, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b', ('S', 2)], ['c', 'b', 'S'])
|--- another try
(b, 4, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c', 'b'], ['S', 'b', 'S'])
|--- back
(b, 3, [('S', 0), 'a', ('S', 0), 'a', ('S', 2), 'c'], ['b', 'S', 'b', 'S'])
|--- back
(b, 2, [('S', 0), 'a', ('S', 0), 'a', ('S', 2)], ['c', 'b', 'S', 'b', 'S'])
|--- another try
(b, 2, [('S', 0), 'a', ('S', 0), 'a'], ['S', 'b', 'S', 'b', 'S'])
|--- back
(b, 1, [('S', 0), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- another try
(q, 1, [('S', 0), 'a', ('S', 1)], ['a', 'S', 'b', 'S'])
|--- advance
(q, 2, [('S', 0), 'a', ('S', 1), 'a'], ['S', 'b', 'S'])
|--- expand
(q, 2, [('S', 0), 'a', ('S', 1), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 2, [('S', 0), 'a', ('S', 1), 'a', ('S', 0)], ['a', 'S', 'b', 'S', 'b', 'S'])
|--- another try
(q, 2, [('S', 0), 'a', ('S', 1), 'a', ('S', 1)], ['a', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 2, [('S', 0), 'a', ('S', 1), 'a', ('S', 1)], ['a', 'S', 'b', 'S'])
|--- another try
(q, 2, [('S', 0), 'a', ('S', 1), 'a', ('S', 2)], ['c', 'b', 'S'])
|--- advance
(q, 3, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c'], ['b', 'S'])
|--- advance
(q, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b'], ['S'])
|--- expand
(q, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 0)], ['a', 'S', 'b', 'S'])
|--- momentary insuccess
(b, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 0)], ['a', 'S', 'b', 'S'])
|--- another try
(q, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 1)], ['a', 'S'])
|--- momentary insuccess
(b, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 1)], ['a', 'S'])
|--- another try
(q, 4, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 2)], ['c'])
|--- advance
(q, 5, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 2), 'c'], [])
|--- success
(f, 5, [('S', 0), 'a', ('S', 1), 'a', ('S', 2), 'c', 'b', ('S', 2), 'c'], [])
=> sequence is syntactically correct

expand - represents the first production corresponding to the starting symbol
       - example: (q, 1, [], S) => (q, 1, S1, aSbS)
advance - represents the transition from one state to another
        - example: (q, 1, S1, aSbS) => (q, 2, S1a, SbS)
momentary insuccess - represents the fact that the current sequence is not syntactically correct
                    - example: (q, 2, S1aS1aS1, aSbSbSbS) => (b, 2, S1aS1aS1, aSbSbSbS)
another try - represents the next production corresponding to the starting symbol
            - example 1: (q, 2, S1aS1aS1, aSbSbSbS) => (q, 2, S1aS1aS2, aSbSbS)
            - example 2: (b, 2, S1aS1aS2, aSbSbS) => (q, 2, S1aS1aS2, cbSbS)
back - represents the fact that you have to go back to the previous state
     - example: (b, 5, S1aS1aS2cbS2c, bS) => (b, 4, S1aS1aS2cbS2, cbS)
success - represents the fact that the sequence is syntactically correct
        - example: (q, 5, S1aS1aS2cbS2c, []) => (f, 5, S1aS1aS2cbS2c, [])