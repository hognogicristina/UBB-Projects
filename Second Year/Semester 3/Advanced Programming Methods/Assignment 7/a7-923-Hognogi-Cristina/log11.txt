ID: 
15
Execution stack: 
(int v; (Ref(int) a; (v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
int v
(Ref(int) a; (v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
int v
(Ref(int) a; (v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
int v
(Ref(int) a; (v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
int v
(Ref(int) a; (v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a)))))))
Symbol table: 
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Ref(int) a
(v = 10; (New(a, 22); (Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
New(a, 22)
(Fork((WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a))))); (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (0, int)
v -> 10
Output list: 
File table:
Heap memory:

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
(WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a)))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
15
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
(WriteHeap(a, 30); (v = 32; (Print(v); Print(ReadHeap(a)))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
WriteHeap(a, 30)
(v = 32; (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
WriteHeap(a, 30)
(v = 32; (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
WriteHeap(a, 30)
(v = 32; (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
WriteHeap(a, 30)
(v = 32; (Print(v); Print(ReadHeap(a))))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 22

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
v = 32
(Print(v); Print(ReadHeap(a)))
Symbol table: 
a -> (1, int)
v -> 10
Output list: 
10
22
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Print(ReadHeap(a))
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

ID: 
16
Execution stack: 
Symbol table: 
a -> (1, int)
v -> 32
Output list: 
10
22
32
30
File table:
Heap memory:
1 -> 30

