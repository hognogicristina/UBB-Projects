Execution stack: 
(Ref(int) v; (New(v, 20); (Print(ReadHeap(v)); (WriteHeap(v, 30); Print(ReadHeap(v) + 5)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Execution stack: 
(New(v, 20); (Print(ReadHeap(v)); (WriteHeap(v, 30); Print(ReadHeap(v) + 5))))
Ref(int) v
Symbol table: 
Output list: 
File table:
Heap memory:

Execution stack: 
(New(v, 20); (Print(ReadHeap(v)); (WriteHeap(v, 30); Print(ReadHeap(v) + 5))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Execution stack: 
(Print(ReadHeap(v)); (WriteHeap(v, 30); Print(ReadHeap(v) + 5)))
New(v, 20)
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Execution stack: 
(Print(ReadHeap(v)); (WriteHeap(v, 30); Print(ReadHeap(v) + 5)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Execution stack: 
(WriteHeap(v, 30); Print(ReadHeap(v) + 5))
Print(ReadHeap(v))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Execution stack: 
(WriteHeap(v, 30); Print(ReadHeap(v) + 5))
Symbol table: 
v -> (1, int)
Output list: 
20
File table:
Heap memory:
1 -> 20

Execution stack: 
Print(ReadHeap(v) + 5)
WriteHeap(v, 30)
Symbol table: 
v -> (1, int)
Output list: 
20
File table:
Heap memory:
1 -> 20

Execution stack: 
Print(ReadHeap(v) + 5)
Symbol table: 
v -> (1, int)
Output list: 
20
File table:
Heap memory:
1 -> 30

Execution stack: 
Symbol table: 
v -> (1, int)
Output list: 
20
35
File table:
Heap memory:
1 -> 30

Execution stack: 
Symbol table: 
v -> (1, int)
Output list: 
20
35
File table:
Heap memory:
1 -> 30

