DROP TABLE Transaction_Reports;
DROP TABLE Payment;
DROP TABLE Deliveries;
DROP TABLE Orders;
DROP TABLE Work_In;
DROP TABLE Stores;
DROP TABLE Employee;
DROP TABLE Products;
DROP TABLE Model;
DROP TABLE Colour;
DROP TABLE Customers;
DROP TABLE Categories;

-- FIRST TABLE
CREATE TABLE Categories (
	catID int primary key identity, -- auto incrementsprimary key = personl/unique ID
	catName varchar(30) NOT NULL
);

-- SECOND TABLE
CREATE TABLE Model (
	modID int primary key identity,
	catID int foreign key references Categories(catID), -- foreign key = an ID taken from another table
	modName varchar(30) NOT NULL
);

-- THIRD TABLE
CREATE TABLE Colour (
	-- m(colours):n(products)
	colID int primary key identity,
	colName varchar(30) NOT NULL
);

-- FOURTH TABLE
CREATE TABLE Products (
	-- m(products):n(colours)
	proID int primary key identity,
	catID int foreign key references Categories(catID),
	modID int foreign key references Model(modID),
	colID int foreign key references Colour(colID),
	proName varchar(100) NOT NULL,
	proDescription varchar(500) NOT NULL
);

-- FIFTH TABLE
CREATE TABLE Employee (
	empID int primary key identity,
	proID int foreign key references Products(proID),
	catID int foreign key references Categories(catID),
	empName varchar(100) NOT NULL
);

-- SIXTH TABLE
CREATE TABLE Stores (
	-- 1(store):n(employees)
	stoID int primary key identity,
	empID int foreign key references Employee(empID),
	stoLoc varchar(200) NOT NULL,
	stoNrEmployee int NOT NULL
);

-- SEVENTH TABLE
CREATE TABLE Work_In (
	stoID int foreign key references Stores(stoID),
	empID int foreign key references Employee(empID),
	constraint PK_Work_In primary key(stoID, empID)
);

-- EIGHTH TABLE
CREATE TABLE Customers (
	-- 1(customer):n(orders)
	cusID int primary key identity,
	cusName varchar(100) NOT NULL,
	cusPhoneNr int NOT NULL,
	cusAdrres varchar(200) NOT NULL
);

-- NINTH TABLE
CREATE TABLE Payment (
	payID int primary key identity,
	cusID int foreign key references Customers(cusID),
	proID int foreign key references Products(proID),
	payDate varchar(100) NOT NULL
);

-- TENTH TABLE
CREATE TABLE Orders (
	ordID int primary key identity,
	cusID int foreign key references Customers(cusID),
	ordDate varchar(100) NOT NULL
);

-- ELEVENTH TABLE
CREATE TABLE Deliveries (
	delID int primary key identity,
	cusID int foreign key references Customers(cusID),
	delDate varchar(100) NOT NULL
);

-- TWELFTH TABLE
CREATE TABLE Transaction_Reports (
	cusID int foreign key references Customers(cusID),
	ordID int foreign key references Orders(ordID),
	proID int foreign key references Products(proID),
	payID int foreign key references Payment(payID),
	constraint PK_Transaction_Reports primary key(cusID, ordID, proID, payID)
);