1. Write a shell script that recursively counts all the C source files in the directories received as arguments.

2. Write a shell script that receives as command line arguments a word (w) followed by 2 numbers (m and n) 
followed by any number of files. Display the files that contain the word w at least m times on the nth line.

3. Write a shell script that receives as command line arguments a word (w) followed by any number of files. 
The script will display the number of times the word w appears in each file given as an argument.

4. Write a shell script that receives a number (n) followed by any number of C source files as commnad line 
arguments. Display a report that shows the libraries used in each file and the top n used libraries.

5. Write a shell script that receives strings as command line arguments. The first 2 arguments will represent 2 
file names (f1 and f2). The script will write into f1 all the arguments that are not valid user names in the 
current system, and write into f2 the full names and the size of the home directory of the valid users, sorted 
by size in descending order.

6. Write a shell script that receives a file name followed by any number of strings as command line argumets. 
The file will contain directory names. The script will take all the strings that are valid user names in the 
current system and create a report that shows all the directories found both in the file given as the first 
argument and in the home directory of each user received as an argument. If you don't have permission to access 
a user's home directory, display a message.

7. Write a shell script that receives a number (n), a word (w) followed by any number of files as command line 
arguments. The script will display the nth line containing the word w from each file.

8. Write a shell script that receives a number (n) followed by any number of files as command line arguments. 
The script will display all the words with the frequency greater than n from each file.

9. Write a shell script that receives file names as command line arguments. Display the frequency of the even 
numbers in each file.